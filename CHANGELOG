Swift3 (1.10)

    * Supported Python minimum version bumped to 2.7

    * S3Timestamp to ensure the transaction timestamp in Swift3

        - Sometimes Swift3 needs X-Timestamp value to show the request
          result to the client as the response body (e.g. copy result).
          However, older versions of swift3 doesn't have the way to decide
          the request timestamp. This stuff allows Swift3 to make its own
          timestamp when a request coming and supports a format which fits
          to S3 xml format.

    * Fix URL-encoded x-amz-copy-source

        - Fix a bug encoding again URL-encoded x-amz-copy-source.

    * Ignore Content-Type for Delete object request

        - A standard S3 client may set a header "Content-Type" into a DELETE
          request and it causes unexpected error in the backend pure Swift.
          To solve this, now swift3 drops the Content-Type header from the
          request only when it's a DELETE object request.

    * Other minor bug fixes and small improvements

Swift3 (1.9)

    * Date Header fixes (closes CVE-2015-8466)

        - Older versions of swift3 allow requests without any date headers,
          making them vulnerable to replay attacks. Now swift3 forces incomming
          requests to have either valid Date header or valid x-amz-date header.

    * Response fixes

        - Now swift3 returns correct (same syntax with actual S3) response
          in following case:

        -- content-type in ErrorResponse
        -- Etag in BucketListing

    * Allow to delete segments, when the DELETE request is for slo

        - If the incomming DELETE request is to slo object, swift3 now attempt
          to query multipart-manifest=delete to delete whole segments in the
          manifest. This will achieve to clean up part objects for multipart
          upload.

    * Accept chunked transfer-encodings

    * Update supported version of Keystone

    * Move to new namespace (from stackforge to openstack)

    * Other minor bug fixes and small improvements

Swift3 (1.8)

    * multi object deletion support

        - achieve the stuff in Swift3 and drop s3multi dependency off

    * multi object upload support

        - includes Initiate, Upload Part, Upload Part (copy),
          Abort, List (Uploads and Parts)

    * Swift 2.3.0 Support

    * x-amz-request-id is now transuction id in Swift

    * new ACL mechanism partially support

        Swift3 now has a couple of ACL scheme. One is a traditional scheme
        using native container ACL conpatible with backend Swift. The other
        is new scheme called 's3acl' that works as completely compatible with
        actual S3 ACLs. The new scheme is build espicially forcused on:

        - Single bucket namespace

        - Owner/Grant achievement

        - Object ACL support

        Note that the new scheme is still under development, so don't use it
        for production w/o enough testing.

    * logger improvement

    * review workflow changed

        - because Swift3 has joined to stackforge, use gerrit review instead
          of git hub pull request

    * test and package environment improvement

        - Add tox based test

        - pbr support

        - functional tests improvement

        - FakeSwift to simulate backend Swift

        - pylint support


    * Refactors

        - split controllers like as original Swift

        - create Swift3 request/response classes

        - add XML validation

        - add pipeline validation

        - ACL handlers for s3acl

    * A tons of bug fixes

        - Thanks guys for working this!!

Swift3 (<1.7)

    * TODO (or skip to write down?)

swift3 (0.5)

    * Initial separation release

