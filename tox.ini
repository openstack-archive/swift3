[tox]
envlist = py27,tempauth,keystone,s3acl,pylint,pep8
minversion = 1.6
skipsdist = True

[testenv]
whitelist_externals =/bin/bash
usedevelop = True
install_command = pip install {opts} {packages}
deps =
  -r{toxinidir}/test-requirements.txt
  PyECLib==1.0.7
  https://launchpad.net/swift/kilo/2.3.0/+download/swift-2.3.0.tar.gz
commands = nosetests {posargs:swift3/test/unit}
setenv = VIRTUAL_ENV={envdir}
         NOSE_WITH_OPENSTACK=1
         NOSE_OPENSTACK_COLOR=1
         NOSE_OPENSTACK_RED=0.05
         NOSE_OPENSTACK_YELLOW=0.025
         NOSE_OPENSTACK_SHOW_ELAPSED=1
         NOSE_OPENSTACK_STDOUT=1
         NOSE_WITH_COVERAGE=1
         NOSE_COVER_BRANCHES=1

[testenv:tempauth]
commands = /bin/bash {posargs:swift3/test/functional/run_test.sh}
setenv = AUTH=tempauth

[testenv:keystone]
commands = /bin/bash {posargs:swift3/test/functional/run_test.sh}
setenv = AUTH=keystone
deps =
  {[testenv]deps}
  https://launchpad.net/keystone/kilo/2015.1.0/+download/keystone-2015.1.0.tar.gz

[testenv:s3acl]
commands = /bin/bash {posargs:swift3/test/functional/run_test.sh}
setenv = AUTH=tempauth
         S3ACL=true

[testenv:pylint]
# Avoid to fail by checking members at lxml dynamically loaded module
commands = pylint -E swift3 --ignored-modules=lxml.etree

[testenv:pep8]
commands = flake8

[testenv:venv]
commands = {posargs}

[testenv:cover]
setenv = VIRTUAL_ENV={envdir}
         NOSE_WITH_COVERAGE=1
         NOSE_COVER_BRANCHES=1
         NOSE_COVER_HTML=1
         NOSE_COVER_HTML_DIR={toxinidir}/cover

[flake8]
# follow the same style guidelines with swift
ignore = H
select = F,E,W,H102,H103,H501,H903,H231
exclude = .venv,.git,.tox,dist,doc,*egg,build
show-source = True
