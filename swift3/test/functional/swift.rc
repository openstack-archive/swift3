#!/bin/bash
#
# Copyright (c) 2014 OpenStack Foundation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_sw_setup()
{
    case "$AUTH"
    in
	tempauth)
	    export TENANT_ID="AUTH_${TENANT}"
	    export TOKEN_ID=$($CURL_PROG -s -I -X GET \
		-H "x-storage-user: ${TENANT}:${ADMIN_USER}" \
		-H "x-storage-pass: ${ADMIN_PASS}" \
		http://${SWIFT_HOST}/auth/v1.0 | \
		_hq x-storage-token)
	    ;;
	keystone)
	    local xml="<auth tenantName=\"${TENANT}\">
<passwordCredentials username=\"${ADMIN_USER}\"
 password=\"${ADMIN_PASS}\"/></auth>"

	    local res=$($CURL_PROG -s -d "$xml" \
		-H 'Content-type: application/xml' \
		-H 'Accept: application/xml' \
		http://${KEYSTONE_HOST}/v2.0/tokens)

	    export TENANT_ID="AUTH_$(echo $res | _xpath '/access/token/tenant/@id')"
	    export TOKEN_ID=$(echo $res | _xpath '/access/token/@id')
	    ;;
	*)
	    _die "unknown auth, $AUTH"
	    ;;
    esac

    local c
    local o

    # remove user data
    for c in $(_sw_get / 2>/dev/null); do
	_retry _sw_post /$c -H "x-versions-location: $c"  # disable versioning
	for o in $(_sw_get /$c 2>/dev/null); do
	    _retry _sw_delete /$c/$o
	done
	_retry _sw_delete /$c
    done
}

_swcurl()
{
    local tmp_file=$tmp.$RANDOM

    $CURL_PROG -s -H "x-storage-token: ${TOKEN_ID}" "$@" -w '%{http_code}' \
	> $tmp_file

    status=$(tail -c -3 $tmp_file)
    echo "> curl $@... $status" | _filter_curl_command >&2

    head -c -3  $tmp_file

    _is_http_success $status
}

_sw_head()
{
    local path=$1; shift

    _swcurl -I -X HEAD "$@" http://${SWIFT_HOST}/v1/${TENANT_ID}${path}
}

_sw_get()
{
    local path=$1; shift

    _swcurl -X GET "$@" http://${SWIFT_HOST}/v1/${TENANT_ID}${path}
}

_sw_put()
{
    local path=$1; shift

    _swcurl -X PUT "$@" http://${SWIFT_HOST}/v1/${TENANT_ID}${path}
}

_sw_post()
{
    local path=$1; shift

    _swcurl -X POST "$@" http://${SWIFT_HOST}/v1/${TENANT_ID}${path}
}

_sw_delete()
{
    local path=$1; shift

    _swcurl -X DELETE "$@" http://${SWIFT_HOST}/v1/${TENANT_ID}${path}
}

# make sure this script returns success
/bin/true
